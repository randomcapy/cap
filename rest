### PRACTICAL 1: HairEyeColor Dataset Plots

?HairEyeColor
View(HairEyeColor)
d1 <- data.frame(HairEyeColor)
head(d1)

# Bar chart
d1 %>% ggplot(aes(Eye)) + geom_bar(fill = "pink") + theme_dark() + 
  labs(title= "No. of observations according to Eye")

# Histogram
d1 %>% ggplot(aes(Freq)) + geom_histogram(binwidth = 10) + 
  labs(title= "Histogrm") + theme_bw()

# Multiple histogram by category
d1 %>% ggplot(aes(Freq)) + geom_histogram(binwidth = 10) + 
  labs(title= "Histogrm") + theme_bw() + facet_wrap(~Eye)

# Boxplot
d1 %>% ggplot(aes(Eye,Freq)) + geom_boxplot() + labs(title= "Boxplot") + theme_bw()

# Boxplot with flipped axis
d1 %>% ggplot(aes(Eye,Freq)) + geom_boxplot() + labs(title= "Boxplot") + 
  theme_bw() + coord_flip()

# Density Plot
d1 %>% ggplot(aes(Freq)) + geom_density() + labs(title= "Density_plot") + 
  theme_bw() + facet_wrap(~Eye)







### PRACTICAL 2: Scatterplot with iris Dataset

library(ggplot2)
data(iris)

ggplot(iris,aes(x=Sepal.Length, y=Sepal.Width,color=Species)) + 
  geom_point(size = 3) + geom_smooth(method = "lm")






### PRACTICAL 3: Scatterplot with CO2 Dataset

library(ggplot2)
data(CO2)

ggplot(CO2, aes(conc, uptake)) + geom_point(size = 3) + 
  geom_smooth(method = "lm") + facet_wrap(~Type)





### PRACTICAL 4: Scatterplot with mpg Dataset

library(ggplot2)
data(mpg)

ggplot(mpg, aes(x = displ, y = cty)) + geom_point(size = 3) + 
  geom_smooth(method = "lm") + 
  labs(title = "Displacement vs City MPG", x = "Displacement (L)", y = "City MPG") + 
  theme_minimal() + facet_wrap(~ year)






### PRACTICAL 5: Dodge & Percentage Bar Charts

library(ggplot2)
data(mpg)

# Dodge Bar Chart
ggplot(mpg, aes(manufacturer, fill = class)) + 
  geom_bar(stat = "count", position = "dodge")

# Percentage Bar Chart
ggplot(mpg, aes(manufacturer, fill = class)) + 
  geom_bar(stat = "count", position = "fill")





### PRACTICAL 6: 100% Stacked Bar Chart with Text

q1 <- mpg %>% group_by(manufacturer, class) %>% tally() %>%
  mutate(percent = n / sum(n))

ggplot(q1, aes(x = manufacturer, y = percent, fill = class)) + 
  geom_bar(stat = "identity", position = "fill", width = 0.7) + 
  geom_text(aes(label = paste0(sprintf("%1.1f", percent * 100), "%")), 
            position = position_fill(vjust = 0.5), color = "white", size = 3) + 
  labs(title = "Manufacturer vs Class", x = "Manufacturer", y = "Percentage", fill = "Class") + 
  theme_minimal()






### PRACTICAL 7: Subplots using xyplot()

library(lattice)
data(iris)

xyplot(Sepal.Length ~ Sepal.Width | Species, data = iris, layout = c(1, 3))





### PRACTICAL 8: Themed Plots with msleep Dataset

library(dplyr)
library(ggplot2)
library(tidyr)
library(forcats)
data(msleep)

# Bar Chart
msleep %>% drop_na(vore) %>% ggplot(aes(fct_infreq(vore))) + 
  geom_bar(fill = "pink") + theme_dark()

# Boxplot
msleep %>% drop_na(vore) %>% ggplot(aes(vore, sleep_total)) + 
  geom_boxplot()

# Flipped Boxplot
msleep %>% drop_na(vore) %>% ggplot(aes(vore, sleep_total)) + 
  geom_boxplot() + coord_flip()

# Histogram
msleep %>% ggplot(aes(awake)) + 
  geom_histogram(binwith = 2, fill = "lightblue") + theme_dark()




### PRACTICAL 9: dplyr with Excel Student Data

library(readxl)
students <- read_excel("students.xlsx")
library(dplyr)

# Total Marks
students <- students %>% mutate(total_marks = M1 + M2 + M3)

# Percentage
students <- students %>% mutate(percentage = round((total_marks / 180) * 100, 2))

# Grade
students <- students %>% mutate(grade = case_when(
  percentage >= 90 ~ "A+",
  percentage >= 80 ~ "A",
  percentage >= 70 ~ "B",
  percentage >= 60 ~ "C",
  percentage >= 50 ~ "D",
  TRUE ~ "F"
))

# Highest Marks per Dept
top_students <- students %>% group_by(Dept) %>% slice_max(order_by = total_marks, n = 1)

# First Class
first_class_students <- students %>% filter(percentage >= 60)

# Highest in Subject 3
top_student_sub3 <- students %>% slice_max(M3)

# Count by Dept
dept_counts <- students %>% count(Dept)

# Failed Students
failed_students <- students %>% filter(percentage < 45)

# Random 5 DS Students
ds_students <- students %>% filter(Dept == "DS")
random_ds_students <- ds_students %>% sample_n(5)

# Write Updated Excel
library(writexl)
writexl::write_xlsx(students, "updated_students.xlsx")

# Histogram
ggplot(students, aes(x = percentage)) + 
  geom_histogram(binwidth = 10, fill = "skyblue", color = "black") + 
  labs(title = "Percentage Distribution of Students", x = "Percentage", y = "Frequency")

# Scatter Plot
ggplot(students, aes(x = M1, y = M2)) + 
  geom_point(color = "blue") + 
  labs(title = "Scatter Plot of Marks in Subject 1 vs Subject 2", x = "Marks in Subject 1", y = "Marks in Subject 2")

# Stacked Bar Plot
ggplot(students, aes(x = grade, fill = Dept)) + 
  geom_bar(stat = "count", position = "fill")

